name: Build

on:
  push:
    branches: [ "main","staging" ]

env:
  REGISTRY: ${{ secrets.REGISTRY || 'ghcr.io' }}
  FOLDER: /var/www
  IMAGE_NAME: ${{ github.repository }}
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME || github.actor }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD || secrets.GITHUB_TOKEN }}
  DOCKER_TAG: ${{ github.ref_name }}
  BUILD: false
  TEST: false
  TZ: UTC

jobs:
  build:
    if: github.env.BUILD == 'true'
    name: Run Build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0

      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}

      - name: Extract Docker metadata (PHP)
        id: meta_php
        uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934 # v5.0.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-php

      - name: Build and push Docker image
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
        with:
          context: .
          target: symfony_php
          push: true
          tags: ${{ steps.meta_php.outputs.tags }}
          labels: ${{ steps.meta_php.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            TZ: ${{ env.TZ }}

      - name: Extract Docker metadata (Caddy)
        id: meta_caddy
        uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934 # v5.0.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-caddy

      - name: Build and push Docker image
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
        with:
          context: .
          target: app_caddy
          push: true
          tags: ${{ steps.meta_caddy.outputs.tags }}
          labels: ${{ steps.meta_caddy.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            TZ: ${{ env.TZ }}
  test:
    if: github.env.TEST == 'true'
    name: Run Codeception tests
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Image name lowercase
        run: |
          echo "IMAGE_NAME=${IMAGE_NAME@L}" >> ${GITHUB_ENV}
      - uses: actions/checkout@v4
      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}
      - name: Docker compose up
        run: docker compose -f docker-compose.yml -f docker-compose.prod.yml up php caddy -d --wait
        env:
          DOCKER_REGISTRY: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          HOST: ''
          DOCKER_TAG: ${{ env.DOCKER_TAG }}
      - name: Run tests
        run: |
          docker compose exec -T php composer test
