name: Deploy

on:
  push:
  pull_request:
#on:
#  workflow_run:
#    workflows: ["Build"]
#    branches: [main]
#    types:
#      - completed

jobs:
  deploy:
    name: Install docker and deploy
    runs-on: ubuntu-latest
    environment: production
#    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: copy file via ssh password
        uses: appleboy/scp-action@master
        with:
          host: ${{ vars.HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: 22
          source: "."
          target: "/var/www"
      - name: Deploy to Digital Ocean droplet via SSH action
        uses: appleboy/ssh-action@master
        env:
          HOST: ${{ vars.HOST }}
          APP_ENV: ${{ vars.APP_ENV }}
          CADDY_MERCURE_JWT_SECRET: ${{ secrets.CADDY_MERCURE_JWT_SECRET }}
          APP_SECRET: ${{ secrets.APP_SECRET }}
          DATABASE_URL: 'postgresql://app:${{ secrets.POSTGRES_PASSWORD }}!@database:5432/app?serverVersion=14&charset=utf8'
        with:
          host: ${{ vars.HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          envs: HOST,APP_ENV,CADDY_MERCURE_JWT_SECRET,APP_SECRET,DATABASE_URL
          script: |
            if [[ $(which docker) == "" ]]; then
              sudo apt-get update
              sudo apt-get install -y apt-transport-https ca-certificates curl software-properties-common
              curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
              sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
              sudo apt-get update
              apt-cache policy docker-ce
              sudo apt-get install -y docker-ce
              sudo apt-get install -y docker-compose
            fi
            cd /var/www && docker-compose pull && docker-compose -f docker-compose.yml -f docker-compose.prod.yml up -d
