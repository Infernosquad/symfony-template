services:
  php:
    depends_on:
      - redis
      - database
    restart: unless-stopped
    volumes:
      - php_socket:/var/run/php
    healthcheck:
      test: '/usr/local/bin/docker-healthcheck'
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 30s
  workers:
    depends_on:
      - php
    command: '/srv/app/bin/console messenger:consume async'
    restart: unless-stopped
  cron:
    command: 'crond -f -l 2 -L /dev/stdout'
    depends_on:
      - php
    restart: unless-stopped

  caddy:
    depends_on:
      - php
    environment:
      SERVER_NAME: ${HOST:-localhost, caddy:80}
      MERCURE_PUBLISHER_JWT_KEY: ${CADDY_MERCURE_JWT_SECRET}
      MERCURE_SUBSCRIBER_JWT_KEY: ${CADDY_MERCURE_JWT_SECRET}
    restart: unless-stopped
    volumes:
      - php_socket:/var/run/php
      - caddy_data:/data
      - caddy_config:/config
    ports:
      # HTTP
      - target: 80
        published: ${HTTP_PORT:-80}
        protocol: tcp
      # HTTPS
      - target: 443
        published: ${HTTPS_PORT:-443}
        protocol: tcp
      # HTTP/3
      - target: 443
        published: ${HTTP3_PORT:-443}
        protocol: udp

  database:
    image: postgres:${POSTGRES_VERSION:-14}-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      # You should definitely change the password in production
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
      POSTGRES_USER: ${POSTGRES_USER:-app}
    volumes:
      - db_data:/var/lib/postgresql/data:rw
  redis:
    image: redis:${REDIS_VERSION:-7}-alpine
    restart: unless-stopped
    volumes:
      - redis_data:/data:rw
volumes:
  php_socket:
  db_data:
  caddy_data:
  caddy_config:
  redis_data:
